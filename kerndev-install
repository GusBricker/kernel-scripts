#!/bin/bash
set -e; set -o pipefail; source kerndev-shared.sh

# If argument provided it specifies a cross-compile target architecture.
target_arch=${1:-"x86_64"}

case $target_arch in
aarch64)
	make_opts="ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-"
	rootfs_image_path=$KERNDEV_PATH/rootfs_aarch64.img
	;;
x86_64)
	rootfs_image_path=$KERNDEV_PATH/rootfs.img
	initrd_image_path=$KERNDEV_PATH/init.img
	kernel_image_path=$LINUX_DEV_PATH/arch/x86/boot/bzImage

	[ ! -f $LINUX_DEV_PATH/REPORTING-BUGS ] && \
		fatal "doesn't look like a linux dev path: $LINUX_DEV_PATH"
	[ ! -f $kernel_image_path ] && \
		fatal "can't find kernel image at $kernel_image_path"
	;;
*)
	fatal "unknown architecture: $target_arch"
	;;
esac

# Sanity checks.

[ ! -f $rootfs_image_path ] && \
	fatal "can't find root fs image at $rootfs_image_path"

elevate $@

push_linux

echo Mounting rootfs image...
unmount
mount_image $rootfs_image_path
trap unmount EXIT

echo Installing headers and modules...
mak headers_install INSTALL_HDR_PATH=/mnt/usr/ >/dev/null
mak modules_install INSTALL_MOD_PATH=/mnt/ >/dev/null

# No initrd for aarch64, yet.
if [ "$target_arch" != "aarch64" ]; then
	echo Installing initrd image...
	mkinitcpio -r /mnt -k $kernel_image_path -g $initrd_image_path \
	    &>/dev/null
fi

pop

[ -z "$NO_DONE" ] && echo Done! || true
