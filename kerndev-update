#!/bin/bash
set -e; set -o pipefail

output_format="%-15s\t%s\n"

source shared_kernel_functions.sh

# Functions.

# Enter $1, stash if necessary, and store previous branch name in $prevbranch.
function enterdir()
{
	cd $1

	prevbranch=$(git rev-parse --abbrev-ref HEAD)

	changed=$(git status --porcelain)
	if [ ! -z "$changed" ]; then
		git stash -q --include-untracked
		stashed=y
	fi
}

# Resore $prevbranch, if stashed changes, pop them.
function exitdir()
{
	git checkout -q $prevbranch

	if [ ! -z "$stashed" ]; then
		git stash pop -q
		unset stashed
	fi
}

# Update kernel tree.
#
# $1:    Directory of kernel tree.
# $2...: Branches to update.
function update()
{
	dir=$1
	shift

	enterdir $dir

	for branch in $@; do
		git checkout -q $branch
		git pull -q --rebase

		printf $output_format $branch $PWD
	done

	exitdir
}

echo Updating linux git trees...

printf $output_format "BRANCH" "DIR"

# Your trees may vary :-)
update ~/linux              master linux-stable linux-next
update ~/linux-stable-queue master
update ~/linux-staging      master test staging-next staging-testing
update ~/linux-mm           master
update ~/linux-aarch64      master devel fixes/core

[ -z "$NO_DONE" ] && echo Done! || true
